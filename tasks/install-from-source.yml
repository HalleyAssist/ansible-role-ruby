---
- name: Install packages required to build ruby (RedHat).
  yum: "name={{ item }} state=present"
  with_items:
    - '@development'
    - zlib-devel
    - openssl-static
  when: ansible_os_family == 'RedHat'

- name: Update apt cache (Debian).
  apt: update_cache=yes cache_valid_time=86400
  when: ansible_os_family == 'Debian'
  tags:
   - package_install

- name: Install packages required to build ruby (Debian).
  apt: "name={{ item }} state=present"
  with_items:
    - build-essential
    - zlib1g-dev
    - libssl-dev
    - libyaml-dev
    - libreadline6-dev
    - zlib1g-dev
    - libncurses5-dev
    - libffi-dev
    - libgdbm3
    - libgdbm-dev
    - autoconf
    - bison
  tags:
   - package_install

- name: Download ruby.
  get_url:
    url: "{{ ruby_download_url }}"
    dest: "{{ workspace }}/ruby-{{ ruby_version }}.tar.gz"
  when: ruby_download_url != False

- name: Extract ruby.
  unarchive:
    src: "{{ workspace }}/ruby-{{ ruby_version }}.tar.gz"
    dest: "{{ workspace }}/"
    copy: no

- name: Build configure
  shell: autoconf
  args:
    chdir: "{{ workspace }}/ruby-{{ ruby_version }}"
    creates: "{{ workspace }}/ruby-{{ ruby_version }}/configure"
  when: ruby_download_git != False
   

- name: Build ruby.
  command: >
    {{ item }}
    chdir={{ workspace }}/ruby-{{ ruby_version }}
    creates=/usr/local/bin/ruby
  with_items:
    - "{{ ruby_source_configure_command }}"
    - "{{ ruby_source_make_command }}"
    - "{{ ruby_source_make_command }} install"
  
- name: Clone Ruby
  git:
    repo: "{{ ruby_download_git }}"
    dest: "{{ workspace }}/ruby-{{ ruby_git_branch }}"
    version: "{{ruby_git_branch}}"
    depth: 1
  when: ruby_download_git != False

- name: Build configure from git
  shell: autoconf
  args:
    chdir: "{{ workspace }}/ruby-{{ ruby_git_branch }}"
    creates: "{{ workspace }}/ruby-{{ ruby_git_branch }}/configure"
  when: ruby_download_git != False
   
- name: Rebuild ruby from git.
  command: >
    {{ item }}
    chdir={{ workspace }}/ruby-{{ ruby_git_branch }}
  with_items:
    - "{{ ruby_source_configure_command }}"
    - "{{ ruby_source_make_command }}"
    - "{{ ruby_source_make_command }} install"
  when: ruby_download_git != False